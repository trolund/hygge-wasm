type Counters = struct {f1: () -> int; f2: () -> int; f3: () -> int; f4: () -> int};

// Return a structure with two functions that share a counter, counting how
// many times they have been called.
fun makeCounters(): Counters = {
    let mutable i: int = 0;
    // The lambda terms below capture i twice
    struct { f1 = fun () -> { i++ };
             f2 = fun () -> { ++i }; 
             f3 = fun () -> { i-- };
             f4 = fun () -> { --i }
            } : Counters
};

let c1: Counters = makeCounters();
assert(c1.f1() = 0);
assert(c1.f2() = 2);
assert(c1.f3() = 2);
assert(c1.f4() = 0)