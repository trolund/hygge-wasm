// Return a function that counts how many times it is called
fun makeCounter(): () -> int = {
    let mutable x: int = 1;
    let mutable y: int = 2;
    fun () -> {
        x <- x * y; // x is captured from the surrounding scope
        x
    }
};

let c1: () -> int = makeCounter();
let c2: () -> int = makeCounter();
assert(c1() = 2);
assert(c1() = 4);
assert(c1() = 8);
assert(c1() = 16);
assert(c2() = 2)