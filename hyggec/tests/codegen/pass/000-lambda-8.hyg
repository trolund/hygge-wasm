fun f6(x: int, y: int, z: int): int = {
    
    fun g(m: int): (int) -> (int) -> (int) -> int = {
        let a: int = 3;
        fun (x: int) -> {
            let b: int = 3;
            fun (y: int) -> {

                let m: int = 200;

                let rec count: (int) -> int = fun(curr: int) -> {
                        if (curr < m) then {
                            count(curr + 1)
                        } 
                        else {
                            curr
                        }
                    };

                let c: int = count(10);
                assert(c = m);
                
                fun (z: int) -> {
                    x + y + z + a + b + c + m + c
                }
            }
        }
    };

    let f0: (int) -> (int) -> (int) -> int = g(10);
    let f1: (int) -> (int) -> int = f0(x);
    let f2: (int) -> int = f1(y);
    f2(z)
};

let c7: int = f6(1, 2, 3);
assert(c7 = 612)


// in js
// function f6(x, y, z) {
//     function g(m) {
//         let a = 3;
//         return function (x) {
//             let b = 3;
//             return function (y) {
//                 let m = 200;

//                 function count(curr) {
//                 		console.log(m)
//                     if (curr < m) {
//                         return count(curr + 1);
//                     } else {
//                         return curr;
//                     }
//                 }

//                 let c = count(10);
//                 console.assert(c === m);
                
//                 console.log(c)

//                 return function (z) {
//                 	console.log(x, y, z, a, b, c, m, c)
//                     return x + y + z + a + b + c + m + c;
//                 };
//             };
//         };
//     }

//     let f0 = g(10);
//     let f1 = f0(x);
//     let f2 = f1(y);
//     return f2(z);
// }

// const result = f6(1, 2, 3);
// console.log(result);