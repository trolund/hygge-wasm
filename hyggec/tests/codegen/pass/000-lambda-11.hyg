let makeCounter: (int) -> () -> int = fun(x: int) -> {
    let y: int = x;
    let mutable x: int = 2;

    let f: () -> int = fun() -> {
        x <- x * y // x is captured from the surrounding scope
    };

    f
};

let c1: () -> int = makeCounter(2);
let c2: () -> int = makeCounter(4);
let c3: () -> int = makeCounter(8);

assert(c1() = 4);
assert(c1() = 8);
assert(c2() = 8);
assert(c3() = 16);
assert(c3() = 128)